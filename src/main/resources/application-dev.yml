server:
  port: 8082

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/hafenkran
    username: hafenkran
    password: test
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: false
  servlet:
    multipart:
      max-file-size: -1
      max-request-size: -1

experimentsFileUploadLocation: /tmp/hafenkran-clusterservice

dockerHubRepoPath: hafenkran/hafenkran-repo
reporting-service-uri: http://localhost:8083
user-service-uri: http://localhost:8081

mockdata: true

kubernetes:
  deployment:
    defaults:
      ram: 1000
      cpu: 10
      bookedTime: 3600
  defaultLogLines: 500
  debugging: false
  pod-cleanup-scheduler-delay: 60
  config:
    load-default: true
    path: /kubernetes/config
  namespace:
    limits:
      cpu: 500
      memory: 10000
  metrics:
    path: http://localhost:8001/apis/metrics.k8s.io/v1beta1
  mock:
    kubernetesClient: true
    metricsServer: true

jwt:
  secret: MCgCIQCAS7IFlSvaBOPXwSBHo+7+6C4RbkvYj3fgI5+Abe4pRwIDAQAB

dockerClient:
  username: hafenkran
  password: president encode cold
  email: hafenkran@protonmail.com
  certPath: ~/.docker/certs
  configPath: ~/.docker/config.json
  tls: 0
  host: unix:///var/run/docker.sock
  authKey: aGFmZW5rcmFuOnByZXNpZGVudCBlbmNvZGUgY29sZA==

service-user:
  name: service
  password: test
  secret: secretToken
